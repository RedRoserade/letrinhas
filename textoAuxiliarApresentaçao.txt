MediaRecorder Funcionamento:
 
MediaRecorder recorder = new MediaRecorder();
 recorder.setAudioSource(MediaRecorder.AudioSource.MIC); //Input microfone
 recorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP); //Formato de output 3gpp
 recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB); //Codificador
 recorder.setOutputFile(PATH_NAME); //Ficheiro a guardar (path)
 recorder.prepare();
 recorder.start();   //Começar a gravar
 ...
 recorder.stop();  //Parar de gravar
 recorder.reset();   // O objecto pode ser usado novamente defenindo novamente o AudioSource, OutputFormat...
 recorder.release(); // O objecto é destruido



MediaPlayer Funcionamento:

 private MediaPlayer myPlayer = new MediaPlayer();
 myPlayer.setDataSource(PATH_NAME); //Path do ficheiro a ser reproduzido
 myPlayer.prepare();  //Preparar sincronamente
 myPlayer.start(); //Começar a reproduzir
 ...
 myPlayer.stop(); //Parar a reproduçao
 myPlayer.release(); //O objecto é destruido



Internacionalizaçao:

res/values/strings.xml - ficheiro padrao para a declaraçao de strings (Resources)
 
res/values-en/strings.xml - Quando é especificado um idioma por exemplo: Ingles
La estarao todos os recursos na lingua inglesa (strings traduzidas)



(An application's Java code refers to just two strings, text_a and text_b. This application includes a localized resource file (res/values-en/strings.xml) that defines text_a and text_b in English. This application also includes a default resource file (res/values/strings.xml) that includes a definition for text_a, but not for text_b)

